From aa12ce664e8a6be3b015afb744ad5142d3fd5feb Mon Sep 17 00:00:00 2001
From: Portisch <hugo.portisch@yahoo.de>
Date: Wed, 5 Jun 2019 10:32:35 +0000
Subject: [PATCH] PeripheralCecAdapter: fix unregister of cec device on
 suspend/power off

---
 .../devices/PeripheralCecAdapter.cpp          | 75 ++++++++++---------
 .../devices/PeripheralCecAdapter.h            |  1 +
 2 files changed, 41 insertions(+), 35 deletions(-)

diff --git a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
index 1691c0f3aa..d68a628946 100644
--- a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp
@@ -159,7 +159,7 @@ void CPeripheralCecAdapter::Announce(ANNOUNCEMENT::AnnouncementFlag flag, const
       CSingleLock lock(m_critSection);
       m_bGoingToStandby = true;
     }
-    StopThread();
+    UnregisterDevice();
   }
   else if (flag == ANNOUNCEMENT::System && !strcmp(sender, "xbmc") && !strcmp(message, "OnWake"))
   {
@@ -346,40 +346,7 @@ void CPeripheralCecAdapter::Process(void)
 
   m_queryThread->StopThread(true);
 
-  bool bSendStandbyCommands(false);
-  {
-    CSingleLock lock(m_critSection);
-    bSendStandbyCommands = m_iExitCode != EXITCODE_REBOOT &&
-                           m_iExitCode != EXITCODE_RESTARTAPP &&
-                           !m_bDeviceRemoved &&
-                           (!m_bGoingToStandby || GetSettingBool("standby_tv_on_pc_standby")) &&
-                           GetSettingBool("enabled");
-
-    if (m_bGoingToStandby)
-      m_bActiveSourceBeforeStandby = m_cecAdapter->IsLibCECActiveSource();
-  }
-
-  if (bSendStandbyCommands)
-  {
-    if (m_cecAdapter->IsLibCECActiveSource())
-    {
-      if (!m_configuration.powerOffDevices.IsEmpty())
-      {
-        CLog::Log(LOGDEBUG, "%s - sending standby commands", __FUNCTION__);
-        m_standbySent = CDateTime::GetCurrentDateTime();
-        m_cecAdapter->StandbyDevices();
-      }
-      else if (m_bSendInactiveSource)
-      {
-        CLog::Log(LOGDEBUG, "%s - sending inactive source commands", __FUNCTION__);
-        m_cecAdapter->SetInactiveView();
-      }
-    }
-    else
-    {
-      CLog::Log(LOGDEBUG, "%s - XBMC is not the active source, not sending any standby commands", __FUNCTION__);
-    }
-  }
+  UnregisterDevice();
 
   m_cecAdapter->Close();
 
@@ -1699,6 +1666,44 @@ void CPeripheralCecAdapter::ProcessActivateSource(void)
     m_cecAdapter->SetActiveSource();
 }
 
+void CPeripheralCecAdapter::UnregisterDevice(void)
+{
+  bool bSendStandbyCommands(false);
+  {
+    CSingleLock lock(m_critSection);
+    bSendStandbyCommands = m_iExitCode != EXITCODE_REBOOT &&
+      m_iExitCode != EXITCODE_RESTARTAPP &&
+      !m_bDeviceRemoved &&
+      (!m_bGoingToStandby || GetSettingBool("standby_tv_on_pc_standby")) &&
+      GetSettingBool("enabled");
+
+    if (m_bGoingToStandby)
+      m_bActiveSourceBeforeStandby = m_cecAdapter->IsLibCECActiveSource();
+  }
+
+  if (bSendStandbyCommands)
+  {
+    if (m_cecAdapter->IsLibCECActiveSource())
+    {
+      if (!m_configuration.powerOffDevices.IsEmpty())
+      {
+        CLog::Log(LOGDEBUG, "%s - sending standby commands", __FUNCTION__);
+        m_standbySent = CDateTime::GetCurrentDateTime();
+        m_cecAdapter->StandbyDevices();
+      }
+      else if (m_bSendInactiveSource)
+      {
+        CLog::Log(LOGDEBUG, "%s - sending inactive source commands", __FUNCTION__);
+        m_cecAdapter->SetInactiveView();
+      }
+    }
+    else
+    {
+      CLog::Log(LOGDEBUG, "%s - XBMC is not the active source, not sending any standby commands", __FUNCTION__);
+    }
+  }
+}
+
 void CPeripheralCecAdapter::StandbyDevices(void)
 {
   CSingleLock lock(m_critSection);
diff --git a/xbmc/peripherals/devices/PeripheralCecAdapter.h b/xbmc/peripherals/devices/PeripheralCecAdapter.h
index 442519b3b5..5e469a484e 100644
--- a/xbmc/peripherals/devices/PeripheralCecAdapter.h
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.h
@@ -100,6 +100,7 @@ namespace PERIPHERALS
 
     // public CEC methods
     void ActivateSource(void);
+    void UnregisterDevice(void);
     void StandbyDevices(void);
     bool ToggleDeviceState(CecStateChange mode = STATE_SWITCH_TOGGLE, bool forceType = false);
 
-- 
2.17.1

