diff -Naur a/cmake/build_configurations/compiler_options.cmake b/cmake/build_configurations/compiler_options.cmake
--- a/cmake/build_configurations/compiler_options.cmake 2016-12-19 09:18:07.169866414 +0000
+++ b/cmake/build_configurations/compiler_options.cmake 2016-12-19 09:19:26.290338156 +0000
@@ -15,8 +15,6 @@
 
 INCLUDE(CheckCCompilerFlag)
 INCLUDE(CheckCXXCompilerFlag)
-INCLUDE(cmake/compiler_bugs.cmake)
-INCLUDE(cmake/floating_point.cmake)
 
 IF(SIZEOF_VOIDP EQUAL 4)
   SET(32BIT 1)
@@ -35,10 +33,6 @@
     IF(WITH_VALGRIND)
       SET(COMMON_C_FLAGS             "-fno-inline ${COMMON_C_FLAGS}")
     ENDIF()
-    # Disable expensive-optimization if shift-or-optimization bug effective
-    IF(HAVE_C_SHIFT_OR_OPTIMIZATION_BUG)
-      SET(C_NO_EXPENSIVE_OPTIMIZATIONS TRUE)
-    ENDIF()
     # Disable floating point expression contractions to avoid result differences
     IF(HAVE_C_FLOATING_POINT_FUSED_MADD)
       IF(HAVE_C_FP_CONTRACT_FLAG)
@@ -69,14 +63,6 @@
     IF(HAVE_CXX_SHIFT_OR_OPTIMIZATION_BUG)
       SET(CXX_NO_EXPENSIVE_OPTIMIZATIONS TRUE)
     ENDIF()
-    # Disable floating point expression contractions to avoid result differences
-    IF(HAVE_CXX_FLOATING_POINT_FUSED_MADD)
-      IF(HAVE_CXX_FP_CONTRACT_FLAG)
-	SET(COMMON_CXX_FLAGS "${COMMON_CXX_FLAGS} -ffp-contract=off")
-      ELSE()
-        SET(CXX_NO_EXPENSIVE_OPTIMIZATIONS TRUE)
-      ENDIF()
-    ENDIF()
     IF(CXX_NO_EXPENSIVE_OPTIMIZATIONS)
       SET(COMMON_CXX_FLAGS "${COMMON_CXX_FLAGS} -fno-expensive-optimizations")
     ENDIF()
